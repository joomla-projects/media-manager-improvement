!function(a){"object"==typeof exports&&"object"==typeof module?a(require("../../lib/codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],a):a(CodeMirror)}(function(a){"use strict";a.defineMode("scheme",function(){function a(a){for(var b={},c=a.split(" "),d=0;d<c.length;++d)b[c[d]]=!0;return b}function b(a,b,c){this.indent=a,this.type=b,this.prev=c}function c(a,c,d){a.indentStack=new b(c,d,a.indentStack)}function d(a){a.indentStack=a.indentStack.prev}function e(a){return a.match(k)}function f(a){return a.match(l)}function g(a,b){return b===!0&&a.backUp(1),a.match(n)}function h(a){return a.match(m)}var i=a("Î» case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?"),j=a("define let letrec let* lambda"),k=new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\/[01]+#*)?i|[-+]?[01]+#*(?:\/[01]+#*)?@[-+]?[01]+#*(?:\/[01]+#*)?|[-+]?[01]+#*(?:\/[01]+#*)?[-+](?:[01]+#*(?:\/[01]+#*)?)?i|[-+]?[01]+#*(?:\/[01]+#*)?)(?=[()\s;"]|$)/i),l=new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?)(?=[()\s;"]|$)/i),m=new RegExp(/^(?:[-+]i|[-+][\da-f]+#*(?:\/[\da-f]+#*)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?@[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?[-+](?:[\da-f]+#*(?:\/[\da-f]+#*)?)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?)(?=[()\s;"]|$)/i),n=new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)i|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)@[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)?i|(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*))(?=[()\s;"]|$)/i);return{startState:function(){return{indentStack:null,indentation:0,mode:!1,sExprComment:!1}},token:function(a,b){if(null==b.indentStack&&a.sol()&&(b.indentation=a.indentation()),a.eatSpace())return null;var k=null;switch(b.mode){case"string":for(var l,m=!1;null!=(l=a.next());){if('"'==l&&!m){b.mode=!1;break}m=!m&&"\\"==l}k="string";break;case"comment":for(var l,n=!1;null!=(l=a.next());){if("#"==l&&n){b.mode=!1;break}n="|"==l}k="comment";break;case"s-expr-comment":if(b.mode=!1,"("!=a.peek()&&"["!=a.peek()){a.eatWhile(/[^\/s]/),k="comment";break}b.sExprComment=0;default:var o=a.next();if('"'==o)b.mode="string",k="string";else if("'"==o)k="atom";else if("#"==o)if(a.eat("|"))b.mode="comment",k="comment";else if(a.eat(/[tf]/i))k="atom";else if(a.eat(";"))b.mode="s-expr-comment",k="comment";else{var p=null,q=!1,r=!0;a.eat(/[ei]/i)?q=!0:a.backUp(1),a.match(/^#b/i)?p=e:a.match(/^#o/i)?p=f:a.match(/^#x/i)?p=h:a.match(/^#d/i)?p=g:a.match(/^[-+0-9.]/,!1)?(r=!1,p=g):q||a.eat("#"),null!=p&&(r&&!q&&a.match(/^#[ei]/i),p(a)&&(k="number"))}else if(/^[-+0-9.]/.test(o)&&g(a,!0))k="number";else if(";"==o)a.skipToEnd(),k="comment";else if("("==o||"["==o){for(var s,t="",u=a.column();null!=(s=a.eat(/[^\s\(\[\;\)\]]/));)t+=s;t.length>0&&j.propertyIsEnumerable(t)?c(b,u+2,o):(a.eatSpace(),a.eol()||";"==a.peek()?c(b,u+1,o):c(b,u+a.current().length,o)),a.backUp(a.current().length-1),"number"==typeof b.sExprComment&&b.sExprComment++,k="bracket"}else")"==o||"]"==o?(k="bracket",null!=b.indentStack&&b.indentStack.type==(")"==o?"(":"[")&&(d(b),"number"==typeof b.sExprComment&&0==--b.sExprComment&&(k="comment",b.sExprComment=!1))):(a.eatWhile(/[\w\$_\-!$%&*+\.\/:<=>?@\^~]/),k=i&&i.propertyIsEnumerable(a.current())?"builtin":"variable")}return"number"==typeof b.sExprComment?"comment":k},indent:function(a){return null==a.indentStack?a.indentation:a.indentStack.indent},closeBrackets:{pairs:'()[]{}""'},lineComment:";;"}}),a.defineMIME("text/x-scheme","scheme")});